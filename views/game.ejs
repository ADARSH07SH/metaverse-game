<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />

    <title>Game Overlay</title>
    
    <link rel="stylesheet" href="/css/game.css" />
    <link rel="stylesheet" href="/css/video.css" />
    <link rel="stylesheet" href="/css/mobile.css" />
    <link rel="stylesheet" href="/css/codeEditor.css" />
   
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap" rel="stylesheet">

    <script src="/js/codeEditor.js"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/phaser@3/dist/phaser.min.js"></script>
    <script src="https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rexvirtualjoystickplugin.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    
    <script src="https://cdn.jsdelivr.net/npm/mediasoup-client/umd/mediasoupClient.min.js"></script>
    <script>
    
     
    </script>

    
    <script src="/socket.io/socket.io.js"></script>

    
    <script>
      const socket = io();
      
    </script>
  </head>
  <body>
    <div id="game-container"></div>
    <div class="mobileMain"></div>

    <div id="conferenceWindow" class="conference-window" style="display: none;">
  <div class="conference-header">
    <h2>Conference Meeting</h2>
  </div>
  <div class="video-grid" id="videoGrid">
  <div id="remote-videos"></div>
  <div class="local-video-container">
    <video id="local-video" autoplay playsinline muted></video>
    <div class="participant-name">You</div>
    <div id="local-avatar" class="video-avatar"></div>
  </div>
</div>
  <button id="exitConferenceBtn">Exit Conference</button>
</div> 
    
    <div class="chatbox">
      <div class="chat">
        <input type="text" id="player-chat" name="playerChat" />
        <button class="AI" id="AI">BOT</button>
        <button type="submit" class="player-chat-submit">Send</button>
      </div>
      <div id="chat-messages"></div>
    </div>

    <div class="players-list hidden">
      <h3>LIVE PEOPLE</h3>
      <ul id="players-ul"></ul>
    </div>

    <div id="version"></div>

    <div id="imageOverlay" style="
  display: none;
  position: fixed;
  top: 5%;
  left:10%;
  width: 80%;
  height: 90%;

  z-index: 9999;
  justify-content: center;
  align-items: center;
">
  <img src="/assets/main_assets/basic.png" alt="Overlay" style="max-width: 90%; max-height: 90%;">
</div>

    
    <div id="virtualEditorScreen" class="hidden">
      <div class="editor-header">
        <h3>Collab Editor</h3>
        <button id="closeEditorBtn">‚ùå</button>
      </div>
      <div id="editorContainer" style="height: 90%; width: 100%"></div>
    </div>

<div id="notesEditor" class="notesEditor hidden">

 <button class="closeBtn" onclick="document.getElementById('notesEditor').classList.add('hidden')">‚úñ</button>

  <div id="notesContent" class="notesContent" contenteditable="true">
    Start typing your notes here...
  </div>
</div>

    
    <div
      id="gamedata"
      data-room-id="<%= roomId %>"
      data-user-id="<%= userId %>"
    ></div>

    
    <button id="showButton" style="display: none"></button>

    
    <footer>
      <div class="acc">
        <div class="myinfo">
          <h4 id="timeDisplay"></h4>
          <h4>| <%= userId %></h4>
        </div>
        <div class="accbutton">
          <div class="microphone">
            <i class="fa-solid fa-microphone"></i>
            <i class="fa-solid fa-microphone-slash"></i>
          </div>
          <div class="videobtn">
            <i class="fa-solid fa-video"></i>
            <i class="fa-solid fa-video-slash"></i>
          </div>
          <div class="reaction">
            <i class="fa-regular fa-hand" id="reaction-icon"></i>
            <div class="emoji-bar">
              <span class="emoji" data-emoji="‚úã">‚úã</span>
              <span class="emoji" data-emoji="‚ù§Ô∏è">‚ù§Ô∏è</span>
              <span class="emoji" data-emoji="üòÇ">üòÇ</span>
              <span class="emoji" data-emoji="üò≠">üò≠</span>
              <span class="emoji" data-emoji="ü§ù">ü§ù</span>
              <span class="emoji" data-emoji="üôè">üôè</span>
            </div>
          </div>
          <div class="endcall">
            <a id="callEndLink">
              <i
                class="fa-solid fa-phone fa-rotate-by"
                style="--fa-rotate-angle: 135deg"
              ></i>
            </a>
          </div>
        </div>
        <div class="right-controls">
          <div class="chat">
            <i class="fa-regular fa-message"></i>
          </div>
          <div class="gamepad">
            <i class="fa-solid fa-gamepad"></i>
          </div>
          <div class="coding">
            <i class="fa-solid fa-terminal"></i>
          </div>
          <div class="notes">
           <i class="fa-solid fa-note-sticky"></i>
          </div>
          <div class="info">
            <i class="fa-solid fa-mobile"></i>
          </div>
          <div class="people">
            <i class="fa-solid fa-users"></i>
          </div>
          <div class="othercontrols">
            <i class="fa-solid fa-ellipsis-vertical"></i>
          </div>
        </div>
      </div>
    </footer>

    
    <script src="/js/game-socket.js"></script>
    <script src="/js/conference.js"></script>
    <script src="/js/mobile.js"></script>
    <script src="/js/game.js"></script>
    <script src="/js/robot.js"></script>
  
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.2.3/howler.min.js"></script>

    
    <script>
      let roomId = "<%= roomId %>";
      let userId = "<%= userId %>";
      let spriteNum = "<%= sprite %>";

      document.addEventListener("click", function (e) {
        const chatbox = document.querySelector(".chatbox");
        const chatInput = document.getElementById("player-chat");

      
        if (!chatbox.contains(e.target)) {
          chatInput.blur();
        }
      });

      socket.emit("player position");
      socket.on("connect", () => {
       
      });
      socket.on("message", (data) => {
      
      });

      function updateTime() {
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, "0");
        const minutes = now.getMinutes().toString().padStart(2, "0");
        document.getElementById(
          "timeDisplay"
        ).innerText = `${hours}:${minutes}`;
      }
      updateTime();
      setInterval(updateTime, 1000);

      document.addEventListener("DOMContentLoaded", function () {
        const micButton = document.querySelector(".microphone");
        const videoButton = document.querySelector(".videobtn");
        const endcall = document.querySelector(".endcall");
        endcall.addEventListener("click", function () {
          closeGame();
        });
      });

      const playersList = document.querySelector(".players-list");
      const playersUl = document.getElementById("players-ul");
      const people = document.querySelector(".people");

      const coding = document.querySelector(".coding");
      let codingicon = document.querySelector(".coding i");
      const notes = document.querySelector(".notes");
      let notesicon = document.querySelector(".notes i");

        const closeBtn = document.getElementById("closeEditorBtn");
  const editorScreen = document.getElementById("virtualEditorScreen");

      coding.addEventListener("click", function () {
       
        codingicon.classList.toggle("activered");
        editorScreen.classList.toggle("hidden");
        loadMonacoAndInit(currentRoomId||123456);
      });


      notes.addEventListener("click", function () {
       
        notesicon.classList.toggle("activered");
        notesEditor.classList.toggle("hidden");
        
      });


      const othercontrols = document.querySelector(".othercontrols");

othercontrols.addEventListener("click", function () {
  const overlay = document.getElementById("imageOverlay");
  overlay.style.display = overlay.style.display === "none" ? "flex" : "none";
});




      people.addEventListener("click", async function () {
        playersList.classList.toggle("hidden");
        if (!playersList.classList.contains("hidden")) {
          await fetchActivePlayers();
        }
      });

     async function fetchActivePlayers() {
  try {
    const response = await fetch(`/api/get-players?roomId=${roomId}`);
    const players = await response.json();
    playersUl.innerHTML = "";

    players
      .filter(player => player.active === 1 && player.socketId !== socket.id)
      .forEach(player => {
        const li = document.createElement("li");
        li.textContent = player.userName;
        li.classList.add("active-player");

        
        const callBtn = document.createElement("button");
        // callBtn.textContent = " üìû";
        callBtn.title = `Call ${player.userName}`;
        callBtn.addEventListener("click", () => {
          
          initiatePrivateCall(player.socketId, player.userName);
        });

        li.appendChild(callBtn);
        playersUl.appendChild(li);
      });
  } catch (error) {
    console.error("Error fetching players:", error);
  }
}

      document.querySelector(".chat i").addEventListener("click", function () {
        document.querySelector(".chatbox").classList.toggle("hidden");
      });

      document
        .querySelector(".gamepad i")
        .addEventListener("click", function () {
          document.getElementById("showButton").click();
        });

      document.addEventListener("DOMContentLoaded", function () {
        document.getElementById(
          "callEndLink"
        ).href = `/joinroom?userName=${encodeURIComponent(userId)}`;
      });

      window.addEventListener("beforeunload", () => {
        socket.emit("main-disconnect");
      });

      const mobile = document.querySelector(".info");

      mobile.addEventListener("click", () => {
        mobileMain.classList.toggle("active");
        const infoIcon = document.querySelector(".info i");

        if (mobileMain.classList.contains("active")) {
          infoIcon.style.color = "red";
        } else {
          infoIcon.style.color = "";
        }
      });

     
      document.addEventListener("DOMContentLoaded", function () {
        const emojis = document.querySelectorAll(".emoji");
        emojis.forEach((emojiEl) => {
          emojiEl.addEventListener("click", () => {
            const selectedEmoji = emojiEl.getAttribute("data-emoji");
            socket.emit("player-chat", {
              roomId,
              socketId: socket.id,
              message: `${userId} reacted: ${selectedEmoji}`,
              userId,
            });
          });
        });
      });
    </script>
  </body>
</html>
